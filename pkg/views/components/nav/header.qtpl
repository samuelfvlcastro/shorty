{% import "strings" %}

{% func RenderHeader(userId string, userEmail string) %}
<div class="navbar bg-base-100">
  <div class="navbar-start">
    <a href="/" class="btn btn-ghost text-xl font-bold text-primary">SHORTY</a>
  </div>
  <div class="navbar-end gap-2">
    <label class="cursor-pointer grid place-items-center">
      <input type="checkbox" value="dark"
        class="toggle theme-controller bg-primary hover:bg-primary row-start-1 col-start-1 col-span-2 border-primary" />
      <svg class="col-start-1 row-start-1 stroke-base-100 fill-base-100" xmlns="http://www.w3.org/2000/svg" width="14"
        height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
        stroke-linejoin="round">
        <circle cx="12" cy="12" r="5" />
        <path d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4" />
      </svg>
      <svg class="col-start-2 row-start-1 stroke-base-100 fill-base-100" xmlns="http://www.w3.org/2000/svg" width="14"
        height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
        stroke-linejoin="round">
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
      </svg>
    </label>
    {% if userId != "" %}
    <div class="dropdown dropdown-end">
      <label tabindex="0" class="btn btn-ghost btn-circle avatar">
        <div class="avatar placeholder">
          <div class="bg-primary text-neutral-content rounded-full w-8">
            <span class="text-lg">{% if userEmail != "" %}{%s strings.ToUpper(userEmail[0:1]) %}{% endif %}</span>
          </div>
        </div>
      </label>
      <ul tabindex="0" class="mt-3 z-[1] p-2 shadow menu menu-sm dropdown-content bg-base-100 rounded-box w-52">
        <li><a href="/auth/logout">Logout</a></li>
      </ul>
    </div>
    {% else %}
      <a href="/auth" class="btn btn-sm btn-secondary">Sign in</a>
    {% endif %}
  </div>
</div>
{% endfunc %}
